# -*- coding: utf-8 -*-
"""Untitled5.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1NcxZLDmG_Jc8zNqszIORN1BkU_ezsN2b
"""

#tuple
a = (1,2,3)
print(a)
b = (1,3,"string")
print(b)

a[0] = 2
a.append(4)

#딕셔너리
info = {'A' : 2.3, 'B' : 'C', 5: 'D'}
print(info)

info['A'] = 5.2
print(info)

info['Hello'] = [1, 2, 3, 4, 'World']
print(info)

# Dictionary
thisdict = {
    "brand": "Ford",
    "model": "Mustang",
    "year": 1964
}
print(thisdict["brand"])
print(type(thisdict))

thisdict = dict(name = "John", age = 36, country = "Norway")
print(thisdict)
print(type(thisdict))

#for loop
items = [1,2,3,4, 'Hello', 6.24]
info = {'A' : 1, 'B' : 2, 'C' : 3}
for key in info:
  print(key, info[key])
print('---------------------')
for key, value in info.items():
  print(key, value)

from ast import Lambda
#numpy 배열
import numpy as np
a = np.array([1,2,3,4])
print(a)
print(a + a)

print('일반배열')
b = [1,2,3,4]
print(b+b)

print('이중배열(행렬)')
a = np.array([[1,2],[3,4]])
print(a)

print('삼중배열(행렬)')
a = np.array([[[1,2,],[3,4]], [[1,2,],[3,4]]])
print(a)

print('배열의 모양(Shape)')
a = np.array([1,2,3,4])
b = np.array([[1],[2],[3],[4]])
print(a)
print(a.shape)
print(b)
print(b.shape)

print('Norm')
from numpy import linalg as LA
c = np.array([[1,2,3],[-1,1,4]])
print(LA.norm(c, axis=0))
print(LA.norm(c, axis=1))
print(LA.norm(c, ord=1, axis=1))
print(LA.norm(c, ord=2, axis=1))

print('전치연산(Transpose)')
a = np.array([[1],[2],[3],[4]])
print(a) #shape = (4,1)
print(a.T) #shape = (1,4)
print(a.T.reshape(-1,4))
print(a.shape)
print(a.T.reshape(-1,4).T.shape)

a = np.array([1,2,3,4])
b = a.reshape(4,-1)
print(a)
print(a.rshape(2,-1))
print(a.shape, ",",b.shape, ",", np.array([[1,2,3,4]]).shape)

print("Reshape")
a = np.array([1,2,3,4,5,6])
print(a.reshape(3.2))
print(a.shape)
b=a.reshape(3,-1)
print(b)
print(b.shape)
c=a.reshape(-1,2)
print(c)
print(c.shape)

print('--------')
a = np.array([1,2,3,4])
print(a)
print(a.T)
b=a.reshgape(4,-1)
print(b.shape)
print(b)
print(b.T.shape)

from os import XATTR_SIZE_MAX
A = np.array([[1,4,2,0], [9,5,0,0], [4,0,2,4], [6,1,8,3]])
x = np.array([1,2,3,4])
b = np.array([0,0,0,0])
n = 4
for i in range(0, n):
  val = 0.0
  for j in range(0,n):
    # TODO 2
    val += A[i,j] * x[j]
  b[i] = val

print("calculate=", b)

b = np.dot(A,x)
print("dot =", b)
b = np.matmul(A,x)
print("matmul=", b)
b = A@x
print("A@x=", b)

b = A*x
print("A*x=", b)

